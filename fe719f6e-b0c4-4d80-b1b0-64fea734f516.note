<?xml version="1.0" encoding="utf-8"?>
<note version="0.3" xmlns:link="http://beatniksoftware.com/tomboy/link" xmlns:size="http://beatniksoftware.com/tomboy/size" xmlns="http://beatniksoftware.com/tomboy">
  <title>Простейшая программа для работы с потоками в Linux</title>
  <text xml:space="preserve"><note-content version="0.1">Простейшая программа для работы с потоками в Linux

#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;pthread.h&gt;
#include &lt;string.h&gt;

void *thread_function(void *arg);

char message[] = "Hello World";

int main() {
    int res;
    pthread_t a_thread;
    void *thread_result;

    res = pthread_create(&amp;a_thread, NULL, thread_function, (void *)message);

    <link:internal>if</link:internal>(res != 0) {
        perror("Thread creation failed");    
        exit(EXIT_FAILURE);
    }
    printf("Waiting for thread to finish... \n");
    res = pthread_join(a_thread, &amp;thread_result);
    <link:internal>if</link:internal> (res != 0) {
        perror("Thread joined failed");
        exit(EXIT_FAILURE);
    }
    printf("Thread joined, it returned %s\n", (char *)thread_result);
    printf("Message is now %s \n", message);
    exit(EXIT_SUCCESS);
}

void *thread_function(void *arg) {
    printf("thread function is running. argument was %s\n", (char *)arg);
    sleep(3);
    strcpy(message, "bye!");
    pthread_exit("thank you for cpu time");
}

Компилим:

      ademidov@ademidov-laptop:~/sources/study_area$ cc -D_REENTRANT -I/usr/include/ntp<link:internal>1</link:internal> threads<link:internal>1</link:internal>.<link:internal>c</link:internal> -o thread<link:internal>1</link:internal> -L/usr/lib/ntp<link:internal>1</link:internal> -lpthread

Выполняем:

      ademidov@ademidov-laptop:~/sources/study_area$ ./thread<link:internal>1</link:internal>
            Waiting for thread to finish...
            thread function is running. argument was Hello World
            Thread joined, it returned thank you for cpu time
            Message is now bye!

Пояснения:

   <link:internal>1</link:internal>. Поток начинает свою работу в момент pthread_start, а не pthread_join.
   2. "Thread joined, it returned thank you for cpu time" - пример возрата значения из функции потока
   3. "Message is now bye! " - пример модификации общей переменной</note-content></text>
  <last-change-date>2010-04-28T14:11:16.5603700+04:00</last-change-date>
  <last-metadata-change-date>2010-04-28T14:11:16.5603700+04:00</last-metadata-change-date>
  <create-date>2008-03-27T15:43:38.7502680+03:00</create-date>
  <cursor-position>79</cursor-position>
  <width>0</width>
  <height>0</height>
  <x>-1</x>
  <y>-1</y>
  <open-on-startup>False</open-on-startup>
</note>