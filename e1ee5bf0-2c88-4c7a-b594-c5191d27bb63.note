<?xml version="1.0" encoding="utf-8"?>
<note version="0.3" xmlns:link="http://beatniksoftware.com/tomboy/link" xmlns:size="http://beatniksoftware.com/tomboy/size" xmlns="http://beatniksoftware.com/tomboy">
  <title>Direction Белой Даче</title>
  <text xml:space="preserve"><note-content version="0.1">Direction Белой Даче


Прежде всего поле Ditection изначально присутствовало в <link:internal>InventTrans</link:internal> и оно не имеет никакого отношения к профилю разноски по складу, а вот Direction в InventTransPosting действиетльно создается в процессе импорта модификации <link:internal>профиль разноски по складу</link:internal>.

   Зачем оно там нужно:

    * InventTransPosting нужен для того, чтобы в таблицу складских сопоставлений(<link:internal>InventSettlement</link:internal>) заполняющуюся в момент закрытия склада протянуть бух. счета и фин. аналитики, по которым разнеслось исходное складское движение и по которым следует создавать бух проводки коррекции себестоимости.

    * До появления профиля разноски все складские движения порождали только одну проводку в ГК(!!!), которая требовала коррекции себестоимости (эту фразу следует читать как одно целое и подобрать более удачное определение мне не удалось).  Для коррекции каждого складского движения нужно было знать только один бух. счет на который разносилось это складское движение и по которому должны будут делаться коррекции.  То есть, для каждого складского движения был нужен только один InventTransPosting.

    * <link:internal>Профиль разноски по складу</link:internal> приводит к тому, что журнал переноса начинает создавать бух проводки, причем одно складское движение (перенос) - порождает сразу две бух проводки , в общем случае, между разными бух счетами.  Соотвественно, при закрытии склада мы должны откорректировать эти две бух проводки, а значит нам где-то надо запомнить эти два счета на которые разнесся перенос.  И мы принимаем архитектурное решение - этим местом будут две записи в InventTransPosting. Эта табличка именно для этого и создавалась (см. пункт 1), но для двух счетов теперь нам нужно уже две записи.

    * Так как у нас получилась ситуация, когда по одному движению(переносу) у нас две записи в InventTransPosting нам нужен механизм, по которому мы сможем отличать одну запись от другой .  В качестве этого механизма и было выбрано поле Direction, которое тянется из <link:internal>InventTrans</link:internal>.  Да, перенос порождает две проводки - приход и расход, да у них могут быть разные счета - но у них всегда будет разные Direction и добавив это поле во все связи таблиц мы всегда получим нужный InventTransPosting. 

   Как это работает:

    * В методе InventUpdate.initInventTransPosting() в момент разноски складского движения мы запрашиваем у наследников класса InventMovement значение Direction и проставляем его в InventTransPosting. Там же, кстати, мы запрашиваем у InventMovement и <link:internal>финансовые аналитики</link:internal> (именно эту часть вы сейчас и тестируете).  Проблема с данным алгоритмом заключается в многообразии складских движений, для которых мы реализуем свои наследники InventMovement.  Для каждого типа складского движения свой алгоритм, который нужно покрыть тестами и, соответственно, очень велика <link:internal>вероятность</link:internal> о чем то забыть и что-то упустить.

    * В методе InventCostItemDim.initInventSettlement() (и InventAdj_Closing.initInventSettlement() кстати тоже) в момент закрытия склада поле Direction протягивается из InventTransPosting в <link:internal>InventSettlement</link:internal>.  Алгоритм для всех записей InventTransPosting един, независимо от типа складского движения. Он не смотрит на то, кто породил запись в InventTransPosting - все что ему нужно - это, имея складскую проводку и коррекцию по ней, найти соответствующий ей InventTransPosting, взять оттуда бух счета и фин аналитики и записать их в <link:internal>InventSettlement</link:internal>.  А уже по <link:internal>InventSettlement</link:internal> механизм закрытия склада на последнем своем этапе породит бух проводки коррекции себестоимости.  На основании универсальности данного механизма я предполагаю, что если вы протестировали предыдущий пункт и он работает верно, то и закрытие склада с очень большой долей вероятности отработает корректно. Алгоритм, либо верно работает со всеми записями InventTransPosting, либо одинаково врет везде, но раз мы пока не видим проблем с остальными складскими движениями - я склонен верить в первое. </note-content></text>
  <last-change-date>2009-10-12T12:00:27.9506830+04:00</last-change-date>
  <last-metadata-change-date>2009-10-12T12:00:27.9506830+04:00</last-metadata-change-date>
  <create-date>2008-03-26T22:56:32.0621210+03:00</create-date>
  <cursor-position>49</cursor-position>
  <width>450</width>
  <height>360</height>
  <x>1207</x>
  <y>49</y>
  <open-on-startup>False</open-on-startup>
</note>