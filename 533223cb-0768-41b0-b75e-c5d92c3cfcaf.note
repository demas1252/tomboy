<?xml version="1.0" encoding="utf-8"?>
<note version="0.3" xmlns:link="http://beatniksoftware.com/tomboy/link" xmlns:size="http://beatniksoftware.com/tomboy/size" xmlns="http://beatniksoftware.com/tomboy">
  <title>Закрытие склада с галкой Обновление производства</title>
  <text xml:space="preserve"><note-content version="0.1">Закрытие склада с галкой Обновление производства

Невозможно отредактировать запись в Журнал (ProdTableJour).
Возник конфликт обновления из-за того, что другой пользовательский процесс выполняет удаление записи или изменение одного или нескольких полей в записи.

---

Это явно некоторая недоделка стандартного закрытия в 4ке. Более того - поскольку эту ошибку не смогли исправить, в версии 2009 весь функционал обновления производства из закрытия - выключен.
Проблема в том, что почти во всех случаях, 4ка по умолчанию использует оптимистический режим блокировок. Типа - не будем блокировать записи, авось они не поменяются. Если другой процесс чего-то поменял - просто тупо повторим наши операции. Поскольку в закрытии, хелперы распределены по-номенклатурно, <link:internal>вероятность</link:internal> конфликта между ними мала. Однако же, в случае обновления шапки производственного заказа (и вообще информации по ПЗ), это естественное разделение обязанностей между хелперами перестает срабатывать и они часто начинают наступать друг другу на хвост, рестартовать транзакции и пересчитывать очередную порцию номенклатур. Поскольку конфликтуют они часто, то есть большие шансы что случится 5 и более рестартов транзакции подряд и система сгенерирует ошибку, про которую ты написал.

Возможных вариантов решения проблемы два и оба они кривые:
1. Пройтись по классам inventCostItemDim, inventCostClosing,InventCostHelp и в выражении (xSession::currentRetryCount() &gt;= #RetryNum) поменять #retryNum на какое-нить число побольше (типа 20 или 30). Минус варианта в том, что у тебя все равно будут происходить конфликты и большая часть хелперов будет работать в пустую, постоянно начиная и откатывая транзакции, напрягая БД но не делая при этом ничего полезного.
2. Пройтись по классу inventAdj::updateModuleProdLine и подправить его таким образом, чтобы все обновляемые записи из производственных таблиц селектились в режиме pessimisticLock. (Конечно придется сделать пессимистические клоны всех этих <link:internal>find</link:internal>(), <link:internal>inventtrans</link:internal>.prodBOM()) и тп. Вариант не сильно лучше предыдущего, ибо большая часть хелперов быстренько начнут друг друга блокировать и скорее всего будут тупо отваливаться по дидлокам.

Ну и наконец есть нормальный вариант - не включать вообще галочку "Обновить производство", а в форме закрытия сделать специальную кнопку "Обновить данные производства". По этой кнопке должен будет отрабатывать примерно следующий код:

while select <link:internal>inventSettlement</link:internal>
where <link:internal>inventSettlement</link:internal>.voucher==inventClosing.voucher &amp;&amp; <link:internal>inventSettlement</link:internal>.transDate==inventClosing.transDate  &amp;&amp;
<link:internal>inventSettlement</link:internal>.TransRecId  != 0                        &amp;&amp;
<link:internal>inventSettlement</link:internal>.SettleModel != inventSettleModel::PhysicalValue
join <link:internal>inventTrans</link:internal>
where <link:internal>inventTrans</link:internal>.<link:internal>recId</link:internal>==<link:internal>inventSettlement</link:internal>.transRecId
{
      ttsbegin;
      inventAdj::updateModule(inventrans,<link:internal>inventSettlement</link:internal>.adjustment,inventClosing);
      ttscommit;
}

После всего этого, надо будет проверить как отмена закрытия отрабатывает. Если она не восстанавливает значения в производственных таблицах, то надо для этого случая сделать такой же примерно код, но вместо inventClosing.voucher подставить inventClosing.cancelVoucher.
В трешке была давняя ошибка, из за которой при отмене закрытия система курочила данные в производственных проводках даже если в закрытии соответствующая галка не стояла. Так что в трешке в закрытии (при использовании производства конечно)всегда надо было ставить соответствующую галочку, если не хотелось поиметь проблем при отмене закрытия. Если в 4ке эту ошибку не исправили (нет под рукой чтобы посмотреть), то скорее всего - никакой специальной обработки для отмены закрытия делать не понадобится, система сама все сделает благодаря ошибке</note-content></text>
  <last-change-date>2010-05-01T18:43:04.3422350+04:00</last-change-date>
  <last-metadata-change-date>2010-05-01T18:43:04.3422350+04:00</last-metadata-change-date>
  <create-date>2010-05-01T18:42:05.2270580+04:00</create-date>
  <cursor-position>262</cursor-position>
  <width>450</width>
  <height>360</height>
  <x>1252</x>
  <y>619</y>
  <open-on-startup>False</open-on-startup>
</note>