<?xml version="1.0" encoding="utf-8"?>
<note version="0.3" xmlns:link="http://beatniksoftware.com/tomboy/link" xmlns:size="http://beatniksoftware.com/tomboy/size" xmlns="http://beatniksoftware.com/tomboy">
  <title>Конструкторы и деструкторы в C++</title>
  <text xml:space="preserve"><note-content version="0.1">Конструкторы и деструкторы в C++


class String {
	public:

String() //constructor with no arguments
    :str(NULL),
    size(0)
{ }

String(int size) //constructor with one argument
    :str(NULL),
    size(size)
{
    str = new char[size];
}


~String() //destructor {
    delete [] str;
};

private:
    char *str;
    int size;
}

<bold>еще пример</bold>:

#include &lt;iostream&gt;

using namespace std;

class A {
public:
  A (int m, int n)
    :m(m),
     n(n)
  {
    cout &lt;&lt; "constructor A" &lt;&lt; m &lt;&lt; n;
  };

  ~A()
  {
  };

private:
  int m;
  int n;
};

class B : public A {
public:
  B()
    :A(3, 4),
     b(5)
  {
    cout &lt;&lt; "constructor B" &lt;&lt; b;
  }

  ~B()
  {
  };

private:
  int b;
};

int main() {
  B x;
  return 0;
}

</note-content></text>
  <last-change-date>2009-07-31T16:52:27.6358380+04:00</last-change-date>
  <last-metadata-change-date>2009-07-31T16:52:27.6358380+04:00</last-metadata-change-date>
  <create-date>2009-07-31T16:44:12.3322330+04:00</create-date>
  <cursor-position>347</cursor-position>
  <width>450</width>
  <height>360</height>
  <x>1071</x>
  <y>485</y>
  <open-on-startup>False</open-on-startup>
</note>