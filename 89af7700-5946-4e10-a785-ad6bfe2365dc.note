<?xml version="1.0" encoding="utf-8"?>
<note version="0.3" xmlns:link="http://beatniksoftware.com/tomboy/link" xmlns:size="http://beatniksoftware.com/tomboy/size" xmlns="http://beatniksoftware.com/tomboy">
  <title>Некоторые тонкости при работе с массивами в С</title>
  <text xml:space="preserve"><note-content version="0.1">Некоторые тонкости при работе с массивами в С

1. Так нельзя:

char arr[] = "abc";
arr++;

arr - массив, который в C является НЕМОДИФИЦИРУЕММЫМ lvalue. То есть, массив нельзя модифицировать. А элементы можно. А сам массив, как единый объект - нет.

K&amp;R конечно говорят, что arr можно использовать как указатель на начало массива, но он указателем не является. Он массив. Он просто неявно приводится к указателю на массив.

Это точно так же, как:

int x = 5;
++x;  // можно
++5;  // нельзя

2. Так нельзя:

char *ptr = "abc"
(*ptr)++;

ибо попытка изменить константу - строку. В С запрещена модификация строкового литерала.

3. А вот так можно:

char *ptr = "abc";
(*arr)++;

Изменяется элемент массива. 
В чем разница с 2:

2 - указатель на элемент массива со статическим классом памяти, заменять элементы которого нельзя (строковый литерал). 
3 - массив символов. Происходит преобразование массива в указатель, указатель разыменовывается и полученное lvalue становится операндом ++. 

4. Можно:

char *ptr = "abc"
ptr++;
</note-content></text>
  <last-change-date>2009-03-24T08:57:16.7285590+03:00</last-change-date>
  <last-metadata-change-date>2009-03-24T08:57:16.7285590+03:00</last-metadata-change-date>
  <create-date>2009-03-24T08:57:04.7185530+03:00</create-date>
  <cursor-position>80</cursor-position>
  <width>450</width>
  <height>360</height>
  <x>107</x>
  <y>53</y>
  <open-on-startup>False</open-on-startup>
</note>